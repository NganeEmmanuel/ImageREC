syntax = "proto3";

service MasterService {
    // Handles incoming image requests
    rpc ProcessImage (ImageRequest) returns (ImageResponse);

    // Queries the result of a previously processed image
    rpc QueryResult (QueryRequest) returns (ResultResponse);

    // Fetches the list of available models
    rpc GetModels (ModelRequest) returns (stream ModelInfo);

    // Fetches details about a specific model
    rpc GetModelDetails (ModelDetailRequest) returns (ModelDetail);
}

service WorkerService {
    // Processes a chunk of data
    rpc ProcessChunk (ChunkRequest) returns (ChunkResponse);

    // Health check for worker readiness
    rpc HealthCheck (HealthRequest) returns (HealthResponse);
}

// Common message for user credentials
message UserCredentials {
    string email = 1;
    string username = 2;
    string password = 3;
}

// Request for processing an image
message ImageRequest {
    UserCredentials user = 1;  // User information for authentication
    bytes image_data = 2;      // The image data in bytes
}

// Response containing the request ID for tracking
message ImageResponse {
    string request_id = 1;  // Unique ID for the request
}

// Request for querying the result of an image
message QueryRequest {
    UserCredentials user = 1;  // User information for authentication
    string request_id = 2;     // The request ID to query
}

// Response containing the status and result of a query
message ResultResponse {
    string status = 1;  // Status of the request (e.g., pending, completed, failed)
    string result = 2;  // Result of the processed image (JSON string)
}

// Request to fetch available models
message ModelRequest {
    UserCredentials user = 1;  // User information for authentication
}

// Response streaming available model information
message ModelInfo {
    string model_name = 1;      // Name of the model
    string description = 2;    // Description of the model
    double accuracy = 3;       // Accuracy of the model
}

// Request to fetch details about a specific model
message ModelDetailRequest {
    UserCredentials user = 1;  // User information for authentication
    string model_name = 2;     // Name of the model to fetch details for
}

// Response with detailed information about the model
message ModelDetail {
    string model_name = 1;      // Name of the model
    string description = 2;    // Description of the model
    double accuracy = 3;       // Accuracy of the model
}

// Request to process a chunk of image data
message ChunkRequest {
    bytes chunk_data = 1;  // Binary data for the chunk
}

// Response from the worker for the processed chunk
message ChunkResponse {
    string result = 1;       // Result of the processing (JSON string)
    string worker_id = 2;    // ID of the worker that processed the chunk
}

// Request for health check
message HealthRequest {
    // No fields for basic health check
}

// Response for health check
message HealthResponse {
    string status = 1;  // Health status message (e.g., "ready", "unavailable")
}
